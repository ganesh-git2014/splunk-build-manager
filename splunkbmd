#!/usr/bin/env python
# -*- coding: utf-8 -*-

import os, sys
import signal
from multiprocessing.pool import ThreadPool
from twisted.web.server import Site
from twisted.web.static import File
from twisted.internet import reactor
from twisted.internet.task import LoopingCall
from manage import BuildManager
from settings import ROOT_DIR, FETCH_INTERVAL, WEB_SERVER_PORT

_PID_FILE = 'splunkbmd.pid'


def main():
    pool = ThreadPool(processes=1)
    lc = LoopingCall(manage_build)
    pool.apply_async(lc.start, (3600 * FETCH_INTERVAL,))
    resource = File(ROOT_DIR)
    factory = Site(resource)
    reactor.listenTCP(WEB_SERVER_PORT, factory)
    reactor.run()


def manage_build():
    manager = BuildManager(ROOT_DIR)
    manager.download_latest_builds()
    manager.delete_expire_builds()


def write_pid_file():
    with open(_PID_FILE, 'w') as f:
        f.write('%s' % os.getpid())


def start():
    pid = os.fork()
    if pid != 0:
        os._exit(0)
    os.close(0)
    sys.stdin = open('/dev/null')
    os.close(1)
    sys.stdout = open('/dev/null', 'w')
    os.close(2)
    sys.stderr = open('/dev/null', 'w')
    os.setsid()
    os.umask(0)
    write_pid_file()
    main()


def end():
    pid = int(open(_PID_FILE, 'r').read())
    os.kill(pid, signal.SIGTERM)
    os.remove(_PID_FILE)


if __name__ == '__main__':
    if len(sys.argv) == 2:
        if sys.argv[1] == 'start':
            start()
        elif sys.argv[1] == 'stop':
            end()
        else:
            print 'Command not supported!'
    else:
        print 'Command not supported!'
